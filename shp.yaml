openapi: 3.0.3
info:
  title: Solving Health Platform
  description: Solving Health Platform
  version: 1.0.0
servers:
  - url: 'https://shp.default.cluster.solvingteam.it'
paths:
  /api/authentication/signin:
    post:
      tags:
        - Authentication
      operationId: authenticationApiSignin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SigninRequest'
        required: true
      responses:
        '200':
          description: successfull
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenResponse'

  /api/authentication/profile:
    get:
      tags:
        - Authentication
      operationId: authenticationApiProfile
      responses:
        '200':
          description: successfull
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileResponse'

  /api/authentication/{sub}/profile:
    get:
      tags:
        - Authentication
      operationId: authenticationApiProfile
      parameters:
        - name: sub
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successfull
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileResponse'

  /api/authentication/attributes:
    put:
      tags:
        - Authentication
      operationId: authenticationApiAttributes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileAttributesRequest'
        required: true
      responses:
        '200':
          description: successfull

  /api/event/global:
    post:
      tags:
        - Event
      operationId: apiEventGlobal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchEventGlobalRequest'
      responses:
        '200':
          description: successfull
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponse'

  /api/event/global/bundle:
    post:
      tags:
        - Event
      operationId: apiEventGlobalBulk
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchEventGlobalRequest'
      responses:
        '200':
          description: successfull
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventBulkResponse'

  /api/event/:
    post:
      tags:
        - Event
      operationId: apiEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchEventRequest'

      responses:
        '200':
          description: successfull
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponse'


  /api/data-acquisition/measure:
    post:
      tags:
        - Measures
      operationId: dataAcquisitionMeasure
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeasureRequest'
        required: true
      responses:
        '200':
          description: successfull

  /api/data-acquisition/measure/bulk:
    post:
      tags:
        - Measures
      operationId: dataAcquisitionMeasureBulk
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeasureRequestBulk'
        required: true
      responses:
        '200':
          description: successfull
  /api/data-reader/measure:
    post:
      tags:
        - Measures
      operationId: dataReaderMeasure
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchMeasureRequest'
      responses:
        '200':
          description: successfull
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeasureResponseList'

  /api/process:
    post:
      tags:
        - Process
      operationId: saveProcess
      parameters:
        - in: query
          name: sub
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveProcessRequest'
        required: true
      responses:
        '201':
          description: created
    get:
      tags:
        - Process
      operationId: getProcess
      parameters:
        - name: sub
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successfull
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessResponse'


  /api/process/{id}:
    put:
      tags:
        - Process
      operationId: editProcess
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
        - in: query
          name: sub
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveProcessRequest'
        required: true
      responses:
        '201':
          description: created
    delete:
      tags:
        - Process
      operationId: deleteProcess
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: successful


  /api/threshold:
    get:
      tags:
        - Threshold
      operationId: thresholdGet
      responses:
        '200':
          description: successfull
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessResponse'
    post:
      tags:
        - Threshold
      operationId: thresholdPost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThresholdRequest'
        required: true
      parameters:
        - in: query
          name: sub
          schema:
            type: string
          description: sub parameter is optional , if not provided the profile's sub is used
      responses:
        '201':
          description: created
  
  /api/threshold/{idThreshold}:
    put:
      tags:
        - Threshold
      operationId: thresholdPut
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThresholdRequest'
        required: true
      parameters:
        - name: idThreshold
          in: path
          required: true
          schema:
            type: string
        - in: query
          name: sub
          schema:
            type: string
          description: sub parameter is optional , if not provided the profile's sub is used
      responses:
        '200':
          description: successfull
    delete:
      tags:
        - Threshold
      operationId: thresholdDelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThresholdRequest'
        required: true
      parameters:
        - name: idThreshold
          in: path
          required: true
          schema:
            type: string
        - in: query
          name: sub
          schema:
            type: string
          description: sub parameter is optional , if not provided the profile's sub is used
      responses:
        '200':
          description: successfull

components:
  schemas:
    SigninRequest:
      type: object
      properties:
        password:
          type: string
          format: string
        username:
          type: string
          format: string
        deviceToken:
          type: string
          format: string

    AccessTokenResponse:
      type: object
      properties:
        accessToken:
          type: string
          format: string
        expiresIn:
          type: number
          format: number
        tokenType:
          type: string
          format: string
        refreshToken:
          type: string
          format: string
        idToken:
          type: string
          format: string

    ProfileResponse:
      type: object
      properties:
        username:
          type: string
          format: string
        sub:
          type: string
          format: string
        clientId:
          type: string
          format: string
        authorities:
          type: array
          items:
            type: string
        attributes:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              value:
                type: string

    ProfileAttributesRequest:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          value:
            type: string

    MeasureRequest:
      type: object
      properties:
        code:
          type: string
          format: string
        value:
          type: string
          format: string
        date:
          type: string
          pattern: '^[1-9][0-9]{3}\-[0-1]?[1-9]\-[0-3]?[0-9]+.+[\+][0-9]{2}\:[0-9]{2}$'
          example: "2022-07-19T14:59:58+02:00"
        metadata:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              value:
                type: string

    SearchMeasureRequest:
      type: object
      properties:
        last:
          type: boolean
        sub:
          type: string
        page:
          type: integer
        pageSize:
          type: integer
        start:
          type: string
          pattern: '^[1-9][0-9]{3}\-[0-1]?[1-9]\-[0-3]?[0-9]+.+[\+][0-9]{2}\:[0-9]{2}$'
          example: "2022-07-19T14:59:58+02:00"
        end:
          type: string
          pattern: '^[1-9][0-9]{3}\-[0-1]?[1-9]\-[0-3]?[0-9]+.+[\+][0-9]{2}\:[0-9]{2}$'
          example: "2022-07-19T14:59:58+02:00"
        codes:
          type: array
          items:
            type: string

    MeasureRequestBulk:
      type: array
      items:
        $ref: '#/components/schemas/MeasureRequest'

    MeasureResponse:
      type: object
      properties:
        sub:
          type: string
          format: string
        clientId:
          type: string
          format: string
        code:
          type: string
          format: string
        value:
          type: string
          format: string
        date:
          type: string
          pattern: '^[1-9][0-9]{3}\-[0-1]?[1-9]\-[0-3]?[0-9]+.+[\+][0-9]{2}\:[0-9]{2}$'
          example:  "2022-07-19T14:59:58+02:00"
        metadata:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              value:
                type: string

    MeasureResponseList:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/MeasureResponse'
        totalPages:
          type: number
        totalElements:
          type: number

    ThresholdResponse:
      type: object
      properties:
        id:
          type: string
        maxHigh:
          type: number
        maxMedium:
          type: number
        minLow:
          type: number
        minMedium:
          type: number
        measureCode:
          type: string
        sub:
          type: string
        gender:
          type: string

    ThresholdResponseList:
      type: array
      items:
        $ref: '#/components/schemas/ThresholdResponse'

    ThresholdRequest:
      type: object
      properties:
        maxHigh:
          type: number
        maxMedium:
          type: number
        minLow:
          type: number
        minMedium:
          type: number
        measureCode:
          type: string
        sub:
          type: string
        gender:
          type: string

    SearchEventGlobalRequest:
      type: object
      properties:
        start:
          pattern: '^[1-9][0-9]{3}\-[0-1]?[1-9]\-[0-3]?[0-9]+.+[\+][0-9]{2}\:[0-9]{2}$'
          example: "2022-08-01T14:59:58+02:00"
        end:
          pattern: '^[1-9][0-9]{3}\-[0-1]?[1-9]\-[0-3]?[0-9]+.+[\+][0-9]{2}\:[0-9]{2}$'
          example: "2022-08-31T14:59:58+02:00"

    SearchEventRequest:
      type: object
      properties:
        start:
          pattern: '^[1-9][0-9]{3}\-[0-1]?[1-9]\-[0-3]?[0-9]+.+[\+][0-9]{2}\:[0-9]{2}$'
          example: "2022-08-01T14:59:58+02:00"
        end:
          pattern: '^[1-9][0-9]{3}\-[0-1]?[1-9]\-[0-3]?[0-9]+.+[\+][0-9]{2}\:[0-9]{2}$'
          example: "2022-08-31T14:59:58+02:00"
        sub:
          type: string
        last:
          type: boolean

    EventResponse:
      type: object
      properties:
        id:
          type: string
        sub:
          type: string
        type:
          type: string
        alertLevel:
          type: string
        details:
          type: object
        createdAt:
          type: string
        text:
          type: string

    EventBulkResponse:
      type: object
      properties:
        sub:
          type: string
        type:
          type: string
        events:
          type: array
          items:
            $ref: '#/components/schemas/EventResponse'

    ProcessResponse:
      type: object
      properties:
        id:
          type: string
        sub:
          type: string
        active:
          type: boolean
        trigger:
          type: object
          properties:
            type:
              type: string
            parameters:
              type: object
              additionalProperties:
                type: string
        conditions:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              parameters:
                type: object
                additionalProperties:
                  type: string
        actions:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              parameters:
                type: object
                additionalProperties:
                  type: string

    SaveProcessRequest:
      type: object
      properties:
        active:
          type: boolean
        trigger:
          type: object
          properties:
            type:
              type: string
            parameters:
              type: object
              additionalProperties:
                type: string
        conditions:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              parameters:
                type: object
                additionalProperties:
                  type: string
        actions:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              parameters:
                type: object
                additionalProperties:
                  type: string