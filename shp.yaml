openapi: 3.0.3
info:
  title: Solving Health Platform
  description: Solving Health Platform
  version: 1.0.0
servers:
  - url: 'https://shp.default.cluster.solvingteam.it'
paths:
  /authentication/api/signin:
    post:
      tags:
        - Authentication
      operationId: authenticationApiSignin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SigninRequest'
        required: true
      responses:
        '200':
          description: successfull
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenResponse'

  /authentication/api/profile:
    get:
      tags:
        - Authentication
      operationId: authenticationApiProfile
      responses:
        '200':
          description: successfull
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileResponse'

  /authentication/api/attributes:
    put:
      tags:
        - Authentication
      operationId: authenticationApiAttributes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileAttributesRequest'
        required: true
      responses:
        '200':
          description: successfull

  /data-acquisition/measure:
    post:
      tags:
        - Measures
      operationId: dataAcquisitionMeasure
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeasureRequest'
        required: true
      responses:
        '200':
          description: successfull

  /data-acquisition/measure/bulk:
    post:
      tags:
        - Measures
      operationId: dataAcquisitionMeasureBulk
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeasureRequestBulk'
        required: true
      responses:
        '200':
          description: successfull
  /data-reader/measure:
    get:
      tags:
        - Measures
      operationId: dataReaderMeasure
      parameters:
        - in: query
          name: page
          schema:
            type: number
          required: false
        - in: query
          name: pageSize
          schema:
            type: number
          required: false
        - in: query
          name: start
          schema:
            type: string
            pattern: '^[1-9][0-9]{3}\-[0-1]?[1-9]\-[0-3]?[0-9]+.+[\+][0-9]{2}\:[0-9]{2}$'
            example: 2022-07-19T14:59:58+02:00
          required: false
        - in: query
          name: end
          schema:
            type: string
            pattern: '^[1-9][0-9]{3}\-[0-1]?[1-9]\-[0-3]?[0-9]+.+[\+][0-9]{2}\:[0-9]{2}$'
            example: 2022-07-19T14:59:58+02:00
          required: false
        - in: query
          name: codes
          schema:
            type: array
            items:
              type: string
          required: false
        - in: query
          name: sub
          schema:
            type: string
          required: false
        - in: query
          name: last
          schema:
            type: boolean
          required: false
      responses:
        '200':
          description: successfull
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeasureResponseList'

  /threshold:
    get:
      tags:
        - Threshold
      operationId: thresholdGet
      responses:
        '200':
          description: successfull
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThresholdResponseList'
    post:
      tags:
        - Threshold
      operationId: thresholdPost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThresholdRequest'
        required: true
      parameters:
        - in: query
          name: sub
          schema:
            type: string
          description: sub parameter is optional , if not provided the profile's sub is used
      responses:
        '201':
          description: created
  
  /threshold/{idThreshold}:
    put:
      tags:
        - Threshold
      operationId: thresholdPut
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThresholdRequest'
        required: true
      parameters:
        - name: idThreshold
          in: path
          required: true
          schema:
            type: string
        - in: query
          name: sub
          schema:
            type: string
          description: sub parameter is optional , if not provided the profile's sub is used
      responses:
        '200':
          description: successfull
    delete:
      tags:
        - Threshold
      operationId: thresholdDelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThresholdRequest'
        required: true
      parameters:
        - name: idThreshold
          in: path
          required: true
          schema:
            type: string
        - in: query
          name: sub
          schema:
            type: string
          description: sub parameter is optional , if not provided the profile's sub is used
      responses:
        '200':
          description: successfull

components:
  schemas:
    SigninRequest:
      type: object
      properties:
        password:
          type: string
          format: string
        username:
          type: string
          format: string
        deviceToken:
          type: string
          format: string

    AccessTokenResponse:
      type: object
      properties:
        accessToken:
          type: string
          format: string
        expiresIn:
          type: number
          format: number
        tokenType:
          type: string
          format: string
        refreshToken:
          type: string
          format: string
        idToken:
          type: string
          format: string

    ProfileResponse:
      type: object
      properties:
        username:
          type: string
          format: string
        sub:
          type: string
          format: string
        clientId:
          type: string
          format: string
        authorities:
          type: array
          items:
            type: string
        attributes:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              value:
                type: string

    ProfileAttributesRequest:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          value:
            type: string

    MeasureRequest:
      type: object
      properties:
        code:
          type: string
          format: string
        value:
          type: string
          format: string
        date:
          type: string
          pattern: '^[1-9][0-9]{3}\-[0-1]?[1-9]\-[0-3]?[0-9]+.+[\+][0-9]{2}\:[0-9]{2}$'
          example: 2022-07-19T14:59:58+02:00
        metadata:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              value:
                type: string

    MeasureRequestBulk:
      type: array
      items:
        $ref: '#/components/schemas/MeasureRequest'

    MeasureResponse:
      type: object
      properties:
        sub:
          type: string
          format: string
        clientId:
          type: string
          format: string
        code:
          type: string
          format: string
        value:
          type: string
          format: string
        date:
          type: string
          pattern: '^[1-9][0-9]{3}\-[0-1]?[1-9]\-[0-3]?[0-9]+.+[\+][0-9]{2}\:[0-9]{2}$'
          example: 2022-07-19T14:59:58+02:00
        metadata:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              value:
                type: string

    MeasureResponseList:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/MeasureResponse'
        totalPages:
          type: number
        totalElements:
          type: number

    ThresholdResponse:
      type: object
      properties:
        id:
          type: string
        maxHigh:
          type: number
        maxMedium:
          type: number
        minLow:
          type: number
        minMedium:
          type: number
        measureCode:
          type: string
        sub:
          type: string
        gender:
          type: string

    ThresholdResponseList:
      type: array
      items:
        $ref: '#/components/schemas/ThresholdResponse'

    ThresholdRequest:
      type: object
      properties:
        maxHigh:
          type: number
        maxMedium:
          type: number
        minLow:
          type: number
        minMedium:
          type: number
        measureCode:
          type: string
        sub:
          type: string
        gender:
          type: string

